AnalyserNode createAnalyser();
Attr createAttribute(DOMString name);
Attr createAttributeNS(DOMString? namespace, DOMString name);
AudioBuffer createBuffer(unsigned long numberOfChannels, unsigned long length, float sampleRate);
AudioBuffer? createBuffer(ArrayBuffer buffer, boolean mixToMono);
AudioBufferSourceNode createBufferSource();
BiquadFilterNode createBiquadFilter();
CanvasGradient createLinearGradient(double x0, double y0, double x1, double y1);
CanvasGradient createRadialGradient(double x0, double y0, double r0, double x1, double y1, double r1);
CanvasPattern createPattern((HTMLImageElement or HTMLCanvasElement or HTMLVideoElement) image, [TreatNullAs=EmptyString] DOMString repetition);
CDATASection createCDATASection(DOMString data);
ChannelMergerNode createChannelMerger(optional unsigned long numberOfInputs = 6);
ChannelSplitterNode createChannelSplitter(optional unsigned long numberOfOutputs = 6);
Comment createComment(DOMString data);
DelayNode createDelay(optional double maxDelayTime = 1);
DelayNode createDelayNode(optional double maxDelayTime = 1);
DesktopNotification createNotification(DOMString title,
Document createDocument(DOMString? namespace,
Document createHTMLDocument(optional DOMString title);
DocumentFragment createContextualFragment(DOMString fragment);
DocumentFragment createDocumentFragment();
DocumentType createDocumentType(DOMString qualifiedName, DOMString publicId,
DynamicsCompressorNode createDynamicsCompressor();
Element createElement(DOMString localName);
Element createElementNS(DOMString? namespace, DOMString qualifiedName);
Event createEvent(DOMString interface);
GainNode createGain();
GainNode createGainNode();
HTMLElement createCaption();
HTMLElement createTFoot();
HTMLElement createTHead();
ImageData createImageData(double sw, double sh);
ImageData createImageData(ImageData imagedata);
MenuBuilder createBuilder();
NodeIterator createNodeIterator(Node root, optional unsigned long whatToShow = 0xFFFFFFFF, optional NodeFilter? filter = null);
PannerNode createPanner();
ProcessingInstruction createProcessingInstruction(DOMString target, DOMString data);
Range createRange();
RTCDataChannel createDataChannel (DOMString label, optional RTCDataChannelInit dataChannelDict);
ScriptProcessorNode createJavaScriptNode(optional unsigned long bufferSize = 0, optional unsigned long numberOfInputChannels = 2, optional unsigned long numberOfOutputChannels = 2);
ScriptProcessorNode createScriptProcessor(optional unsigned long bufferSize = 0, optional unsigned long numberOfInputChannels = 2, optional unsigned long numberOfOutputChannels = 2);
DOMString createObjectURL(Blob blob, optional objectURLOptions options);
DOMString createObjectURL(MediaStream stream, optional objectURLOptions options);
SVGAngle createSVGAngle();
SVGLength createSVGLength();
SVGMatrix createSVGMatrix();
SVGNumber createSVGNumber();
SVGPathSegArcAbs createSVGPathSegArcAbs(float x, float y, float r1, float r2, float angle, boolean largeArcFlag, boolean sweepFlag);
SVGPathSegArcRel createSVGPathSegArcRel(float x, float y, float r1, float r2, float angle, boolean largeArcFlag, boolean sweepFlag);
SVGPathSegClosePath createSVGPathSegClosePath();
SVGPathSegCurvetoCubicAbs createSVGPathSegCurvetoCubicAbs(float x, float y, float x1, float y1, float x2, float y2);
SVGPathSegCurvetoCubicRel createSVGPathSegCurvetoCubicRel(float x, float y, float x1, float y1, float x2, float y2);
SVGPathSegCurvetoCubicSmoothAbs createSVGPathSegCurvetoCubicSmoothAbs(float x, float y, float x2, float y2);
SVGPathSegCurvetoCubicSmoothRel createSVGPathSegCurvetoCubicSmoothRel(float x, float y, float x2, float y2);
SVGPathSegCurvetoQuadraticAbs createSVGPathSegCurvetoQuadraticAbs(float x, float y, float x1, float y1);
SVGPathSegCurvetoQuadraticRel createSVGPathSegCurvetoQuadraticRel(float x, float y, float x1, float y1);
SVGPathSegCurvetoQuadraticSmoothAbs createSVGPathSegCurvetoQuadraticSmoothAbs(float x, float y);
SVGPathSegCurvetoQuadraticSmoothRel createSVGPathSegCurvetoQuadraticSmoothRel(float x, float y);
SVGPathSegLinetoAbs createSVGPathSegLinetoAbs(float x, float y);
SVGPathSegLinetoHorizontalAbs createSVGPathSegLinetoHorizontalAbs(float x);
SVGPathSegLinetoHorizontalRel createSVGPathSegLinetoHorizontalRel(float x);
SVGPathSegLinetoRel createSVGPathSegLinetoRel(float x, float y);
SVGPathSegLinetoVerticalAbs createSVGPathSegLinetoVerticalAbs(float y);
SVGPathSegLinetoVerticalRel createSVGPathSegLinetoVerticalRel(float y);
SVGPathSegMovetoAbs createSVGPathSegMovetoAbs(float x, float y);
SVGPathSegMovetoRel createSVGPathSegMovetoRel(float x, float y);
SVGPoint createSVGPoint();
SVGRect createSVGRect();
SVGTransform createSVGTransform();
SVGTransform createSVGTransformFromMatrix(SVGMatrix matrix);
Text createTextNode(DOMString data);
Touch createTouch(optional Window? view = null,
TouchList createTouchList();
TouchList createTouchList(sequence<Touch> touches);
TouchList createTouchList(Touch touch, Touch... touches);
TreeWalker createTreeWalker(Node root, optional unsigned long whatToShow = 0xFFFFFFFF, optional NodeFilter? filter = null);
WaveShaperNode createWaveShaper();
WebGLBuffer? createBuffer();
WebGLFramebuffer? createFramebuffer();
WebGLProgram? createProgram();
WebGLRenderbuffer? createRenderbuffer();
WebGLShader? createShader(GLenum type);
WebGLTexture? createTexture();
XPathExpression createExpression(DOMString expression, sequence<GLfloat> value);
XPathNSResolver createNSResolver(Node? nodeResolver);
